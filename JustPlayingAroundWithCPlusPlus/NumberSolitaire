#include <iostream>
#include <vector>
#include <math.h>
#include<bits/stdc++.h>
using namespace std;

int path (vector<int> A){
  int size = A.size();
  vector< vector <int> > paths;
  vector< vector <int> > sums;
   vector<int> sum;
  for(int i  = 0; i<size; i++){
      vector<int> temp;
      for(int j = 0; j<pow(6, i); j++){
        temp.push_back(0);
      }
      paths.push_back(temp);
  }
  for(int i  = 0; i<size; i++){
      vector<int> temp;
      for(int j = 0; j<pow(6, i); j++){
        temp.push_back(0);
      }
      sums.push_back(temp);
  }
  for(int i  = 0; i<size; i++){
      int index = 0;
      for(int j = 0; j<pow(6, i); j++){
        if(i==0){
          paths[i][j] = 0;
          sums[i][j] = A[paths[i][j]];
        }else if(paths[i-1][index]==INT_MIN){
          break;
        }else{
          paths[i][j] = paths[i-1][index] + j%6+1;
          if(paths[i][j]>size-1){
           sums[i][j] = INT_MIN;
          }else{
            sums[i][j] = A[paths[i][j]]+sums[i-1][index];
          }
          if(j%6+1==6){
            index++;
          }
        }
    }
  }
   for(int i=0; i<size; i++){
     for(int j = 0; j<pow(6, i); j++){
       if(paths[i][j]==size-1&&sums[i][j]!=INT_MIN){
         sum.push_back(sums[i][j]);
       }
     }
   }

  int max = sum[0];
  for(int i  = 1; i<sum.size(); i++){
    if(max<=sum[i]){
      max=sum[i];
    }
  }
  return max;

}
int main() {
  vector<int> A;
  A.push_back(-1);
  A.push_back(-2);
  A.push_back(-1);
  A.push_back(-5);
  A.push_back(-1);
  A.push_back(-1);
 

  cout<< "Answer" << endl;
  cout<< path(A);
}

